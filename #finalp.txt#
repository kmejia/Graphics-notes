the deal
start as the baseline for mdl and animation
-adding to that
	scanline conversion, lighting and shading
	removal of surfaces behind other surfaces
	(other) mdl features....spec
	mesh
	tweening
	
Scanline conversion
[filling in polysongs by repeatedly draswing lines across the surface]
delta0: always bottom to top
Xt-Xb /(Yt -Yb)

delta1: bottom to middle point or middle to top
switch the two if we each point m
if Y>Ym
 (Xm-Xb)/(Ym -Yb)
this will make sure that you don't divide by zero
__________________________________________________________________
5/18


screen 


- - - - - - - 
- - - y y - -
- - - y y - -
- - - y y - 

overlapping sufaces=== overlapping colors??
whichever surface is on top shoukld have priority, therefore its colored in	
we are not getting rid of triangles, we want to keep them
its a PER PIXEL analysis, something we havent really done recently
we need to keep track of z-values
plot the x-coors the same way you would plot on your regular screen
process is known as : z buffering
-store the z values for each pixel in the z - buffer
-when you plot a point, you can check its z-coordinate against the z-buffer
-we want to be as precise as we want , so we use doubles as the z-buffer


what if z-values are zeroes??
we cant use 0, use MIN_VAL for doubles
plot(x,y,screen,color) ->>plot(x,y,z screen, color , zb)
draw_line
draw_polygons
scanline_convert


                x1,y1,z1
          ____/ 
xo,yo,zo--



Zb  (delta-Z / distance)
